{"version":3,"file":"static/js/738.cd5ff516.chunk.js","mappings":"uSAWIA,GAAYC,EAAAA,EAAAA,IAAW,SAAoBC,EAAOC,GAClD,IAAF,GAA8CC,EAAAA,EAAAA,IAAiBF,GAAvDG,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,cAAkBC,GAArC,YACMC,GAASC,EAAAA,EAAAA,IAAe,YAAaP,GAC3C,OAAuBQ,EAAAA,EAAAA,KACrBC,EAAAA,EAAAA,KADwB,gBAGtBR,IAAAA,EACAE,WAAWO,EAAAA,EAAAA,IAAG,mBAAoBP,IAC/BE,GALmB,IAMtBM,OAAK,kBACAL,GACAF,GAAiB,CAClBQ,QAAS,OACTC,cAAe,SACf,WAAY,aAKrB,IACDf,EAAU,YAAc,Y,0EC1BXgB,EAAW,WACtB,IAAMC,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAAC,IAAD,CAAMC,MAAM,WAAWC,UAAU,SAASC,EAAE,OAAOC,KAAK,QAAxD,UAAgE,qBAC3C,KACnB,SAAC,KAAD,CAAMC,GAAG,YAAT,UACE,SAAC,IAAD,CAAMC,GAAG,MAAMC,OAAQ,CAAEN,MAAO,YAAcO,OAAO,UAArD,SAA+D,eAGzD,IAAI,KACT,KACH,SAAC,IAAD,CACEF,GAAG,MACHC,OAAQ,CAAEN,MAAO,YACjBQ,QAhBe,WACnBV,GAASW,EAAAA,EAAAA,MACV,EAeKF,OAAO,UAJT,SAKC,YAEM,MAIZ,EC7BYG,EAAa,WACxB,OACE,UAAC,IAAD,CAAMV,MAAM,WAAWC,UAAU,SAASC,EAAE,OAAOC,KAAK,QAAxD,UAAgE,gCAChC,KAC9B,SAAC,KAAD,CAAMC,GAAG,SAAT,UACE,SAAC,IAAD,CAAMC,GAAG,MAAMC,OAAQ,CAAEN,MAAO,YAAcO,OAAO,UAArD,SAA+D,aAGzD,IAAI,KACT,KACH,SAAC,KAAD,CAAMH,GAAG,YAAT,UACE,SAAC,IAAD,CAAMC,GAAG,MAAMC,OAAQ,CAAEN,MAAO,YAAcO,OAAO,UAArD,SAA+D,eAG1D,MAIZ,EChBYI,EAAe,WAC1B,IAAQC,GAAeC,EAAAA,EAAAA,KAAfD,WACR,OACE,iCACE,SAAC,IAAD,CACEP,GAAG,KACHL,MAAM,WACNc,KAAK,KACLZ,EAAE,eACFD,UAAU,SALZ,SAMC,+BAGAW,GAAa,SAACf,EAAD,KAAe,SAACa,EAAD,KAC7B,SAAC,IAAD,CACEV,MAAM,WACNC,UAAU,SACVC,EAAE,OACFC,KAAK,QACLY,QAAQ,MACRC,WAAW,OANb,SAOC,mFAMN,EClBD,EAViB,WACf,OACE,SAACC,EAAA,EAAD,WACE,SAAC1B,EAAD,CAAW2B,EAAE,IAAIC,eAAe,SAASxB,WAAW,SAApD,UACE,SAACgB,EAAD,OAIP,C,0JCDG9B,GAAUC,EAAAA,EAAAA,IAAW,SAAkBK,EAAOJ,GAC9C,IAAIG,GAASI,EAAAA,EAAAA,IAAe,UAAWH,GACzC,GAA+BF,EAAAA,EAAAA,IAAiBE,GAA1BE,GAAtB,EAAQ+B,WAAR,aACA,OAAuBC,EAAAA,EAAAA,KACrB7B,EAAAA,EAAAA,IADwB,gBAGtBT,IAAAA,EACAqC,WAAW3B,EAAAA,EAAAA,IAAG,iBAAkBN,EAAMiC,YACnC/B,GALmB,IAMtB,MAAOH,IAGZ,IACDL,EAAQ,YAAc,S","sources":["../node_modules/@chakra-ui/layout/src/container.tsx","components/HomePageText/UserText.jsx","components/HomePageText/CommonText.jsx","components/HomePageText/HomePageText.jsx","pages/HomePage.jsx","../node_modules/@chakra-ui/layout/src/heading.tsx"],"sourcesContent":["import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface ContainerProps\n  extends HTMLChakraProps<\"div\">,\n    ThemingProps<\"Container\"> {\n  /**\n   * If `true`, container will center its children\n   * regardless of their width.\n   *\n   * @default false\n   */\n  centerContent?: boolean\n}\n\n/**\n * Layout component used to wrap app or website content\n *\n * It sets `margin-left` and `margin-right` to `auto`,\n * to keep its content centered.\n *\n * It also sets a default max-width of `60ch` (60 characters).\n *\n * @see Docs https://chakra-ui.com/docs/components/container\n */\nexport const Container = forwardRef<ContainerProps, \"div\">(function Container(\n  props,\n  ref,\n) {\n  const { className, centerContent, ...rest } = omitThemingProps(props)\n\n  const styles = useStyleConfig(\"Container\", props)\n\n  return (\n    <chakra.div\n      ref={ref}\n      className={cx(\"chakra-container\", className)}\n      {...rest}\n      __css={{\n        ...styles,\n        ...(centerContent && {\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }),\n      }}\n    />\n  )\n})\n\nContainer.displayName = \"Container\"\n","import { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { Text } from '@chakra-ui/react';\nimport { logOut } from 'redux/auth/operations';\n\nexport const UserText = () => {\n  const dispatch = useDispatch();\n\n  const handleLogOut = () => {\n    dispatch(logOut());\n  };\n\n  return (\n    <Text color=\"blue.500\" textAlign=\"center\" m=\"auto\" maxW=\"300px\">\n      You can go to your{' '}\n      <Link to=\"/contacts\">\n        <Text as=\"ins\" _hover={{ color: 'blue.300' }} cursor=\"pointer\">\n          contacts\n        </Text>\n      </Link>{' '}\n      or{' '}\n      <Text\n        as=\"ins\"\n        _hover={{ color: 'blue.300' }}\n        onClick={handleLogOut}\n        cursor=\"pointer\"\n      >\n        log out\n      </Text>\n      .\n    </Text>\n  );\n};\n","import { Link } from 'react-router-dom';\nimport { Text } from '@chakra-ui/react';\n\nexport const CommonText = () => {\n  return (\n    <Text color=\"blue.500\" textAlign=\"center\" m=\"auto\" maxW=\"300px\">\n      To use this app you should to{' '}\n      <Link to=\"/login\">\n        <Text as=\"ins\" _hover={{ color: 'blue.300' }} cursor=\"pointer\">\n          log in\n        </Text>\n      </Link>{' '}\n      or{' '}\n      <Link to=\"/register\">\n        <Text as=\"ins\" _hover={{ color: 'blue.300' }} cursor=\"pointer\">\n          register\n        </Text>\n      </Link>\n      .\n    </Text>\n  );\n};\n","import { Heading, Text } from '@chakra-ui/react';\nimport { useAuth } from 'hooks';\nimport { UserText } from './UserText';\nimport { CommonText } from './CommonText';\n\nexport const HomePageText = () => {\n  const { isLoggedIn } = useAuth();\n  return (\n    <>\n      <Heading\n        as=\"h1\"\n        color=\"blue.500\"\n        size=\"xl\"\n        m=\"0 auto 16px \"\n        textAlign=\"center\"\n      >\n        Hi! This is your homepage.\n      </Heading>\n      {isLoggedIn ? <UserText /> : <CommonText />}\n      <Text\n        color=\"blue.600\"\n        textAlign=\"center\"\n        m=\"auto\"\n        maxW=\"300px\"\n        opacity=\"0.4\"\n        userSelect=\"none\"\n      >\n        This is a pet project for my portfolio, I`m not a designer but I was\n        trying!\n      </Text>\n    </>\n  );\n};\n","import { Container } from '@chakra-ui/react';\nimport { CenterContainer } from 'components/CenterContainer';\nimport { HomePageText } from 'components/HomePageText';\n\nconst HomePage = () => {\n  return (\n    <CenterContainer>\n      <Container p=\"0\" justifyContent=\"center\" alignItems=\"center\">\n        <HomePageText />\n      </Container>\n    </CenterContainer>\n  );\n};\n\nexport default HomePage;\n","import {\n  chakra,\n  forwardRef,\n  omitThemingProps,\n  ThemingProps,\n  useStyleConfig,\n  HTMLChakraProps,\n} from \"@chakra-ui/system\"\nimport { cx } from \"@chakra-ui/shared-utils\"\n\nexport interface HeadingProps\n  extends HTMLChakraProps<\"h2\">,\n    ThemingProps<\"Heading\"> {}\n\n/**\n * `Heading` is used to render semantic HTML heading elements.\n *\n * By default, renders as `h2` with themantic size `xl`\n *\n * @see Docs https://chakra-ui.com/docs/components/heading\n */\nexport const Heading = forwardRef<HeadingProps, \"h2\">(function Heading(\n  props,\n  ref,\n) {\n  const styles = useStyleConfig(\"Heading\", props)\n  const { className, ...rest } = omitThemingProps(props)\n\n  return (\n    <chakra.h2\n      ref={ref}\n      className={cx(\"chakra-heading\", props.className)}\n      {...rest}\n      __css={styles}\n    />\n  )\n})\n\nHeading.displayName = \"Heading\"\n"],"names":["props","forwardRef","className","centerContent","omitThemingProps","rest","styles","div","__css","useStyleConfig","Container","chakra","cx","flexDirection","alignItems","displayName","UserText","dispatch","useDispatch","color","textAlign","m","maxW","to","as","_hover","cursor","onClick","logOut","CommonText","HomePageText","isLoggedIn","useAuth","size","opacity","userSelect","CenterContainer","p","justifyContent","h2","Heading"],"sourceRoot":""}